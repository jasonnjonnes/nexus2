name: Zero-Downtime Deployment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test -- --watchAll=false
    
    - name: Build application
      run: npm run build

  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Setup Firebase CLI
      run: npm install -g firebase-tools
    
    - name: Deploy to staging channel
      run: |
        echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" | base64 -d > firebase-service-account.json
        export GOOGLE_APPLICATION_CREDENTIALS=firebase-service-account.json
        firebase hosting:channel:deploy pr-${{ github.event.number }} --expires 7d --project servicepro-4c705
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  deploy-production:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Setup Firebase CLI
      run: npm install -g firebase-tools
    
    - name: Deploy Functions First
      run: |
        echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" | base64 -d > firebase-service-account.json
        export GOOGLE_APPLICATION_CREDENTIALS=firebase-service-account.json
        firebase deploy --only functions --project servicepro-4c705
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
    
    - name: Health Check After Functions
      run: |
        sleep 30  # Wait for functions to be ready
        curl -f https://us-central1-servicepro-4c705.cloudfunctions.net/api/health || exit 1
    
    - name: Deploy to Staging Channel First
      run: |
        firebase hosting:channel:deploy staging --expires 1h --project servicepro-4c705
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
    
    - name: Health Check Staging
      run: |
        sleep 10
        # Get staging URL and test it
        STAGING_URL=$(firebase hosting:channel:list --project servicepro-4c705 | grep staging | awk '{print $3}')
        curl -f $STAGING_URL || exit 1
    
    - name: Deploy to Production
      run: |
        firebase deploy --only hosting --project servicepro-4c705
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
    
    - name: Final Health Check
      run: |
        sleep 10
        curl -f https://pro.nexusinc.io || exit 1
        curl -f https://servicepro-4c705.web.app || exit 1
    
    - name: Cleanup Staging Channel
      run: |
        firebase hosting:channel:delete staging --force --project servicepro-4c705
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      continue-on-error: true

  rollback:
    runs-on: ubuntu-latest
    if: failure()
    needs: [deploy-production]
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Firebase CLI
      run: npm install -g firebase-tools
    
    - name: Rollback to Previous Version
      run: |
        echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" | base64 -d > firebase-service-account.json
        export GOOGLE_APPLICATION_CREDENTIALS=firebase-service-account.json
        # Get previous release and rollback
        firebase hosting:releases:list --project servicepro-4c705 | head -2 | tail -1 | awk '{print $1}' | xargs firebase hosting:releases:restore --project servicepro-4c705
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }} 