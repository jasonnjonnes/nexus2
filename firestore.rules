rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function belongsToTenant(tenantId) {
      return isAuthenticated() 
        && request.auth.token != null
        && 'tenantId' in request.auth.token 
        && request.auth.token.tenantId == tenantId;
    }
    
    function hasRole(role) {
      return isAuthenticated() 
        && request.auth.token != null
        && 'role' in request.auth.token 
        && request.auth.token.role == role;
    }
    
    function isAdmin() {
      return hasRole('admin');
    }
    
    function isCsr() {
      return hasRole('csr');
    }
    
    function isTechnician() {
      return hasRole('technician');
    }
    
    function canRead() {
      return isAdmin() || isCsr() || isTechnician();
    }
    
    function canWrite() {
      return isAdmin() || isCsr();
    }
    
    function canDelete() {
      return isAdmin();
    }
    
    // System documents (protected)
    match /system/{document} {
      allow read, write: if false; // Only server-side functions can access
    }
    
    // User documents - users can read/write their own during onboarding
    match /users/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Multi-tenant data structure: /tenants/{tenantId}/...
    match /tenants/{tenantId} {
      // Tenant document itself
      allow read: if belongsToTenant(tenantId);
      allow write: if belongsToTenant(tenantId) && isAdmin();
      
      // All subcollections under tenant
      match /{document=**} {
        allow read: if belongsToTenant(tenantId) && canRead();
        allow create, update: if belongsToTenant(tenantId) && canWrite();
        allow delete: if belongsToTenant(tenantId) && canDelete();
      }
      
      // Special rules for specific collections
      match /payroll/{payrollId} {
        allow read, write: if belongsToTenant(tenantId) && isAdmin();
      }
      
      match /settings/{settingId} {
        allow read: if belongsToTenant(tenantId) && canRead();
        allow write: if belongsToTenant(tenantId) && isAdmin();
      }
      
      match /roles/{roleId} {
        allow read: if belongsToTenant(tenantId) && canRead();
        allow write: if belongsToTenant(tenantId) && isAdmin();
      }
      
      match /glAccounts/{accountId} {
        allow read: if belongsToTenant(tenantId) && canRead();
        allow write: if belongsToTenant(tenantId) && isAdmin();
      }
      
      match /businessUnits/{unitId} {
        allow read: if belongsToTenant(tenantId) && canRead();
        allow write: if belongsToTenant(tenantId) && isAdmin();
      }
      
      // Invitations - allow reading for invitation lookup
      match /invitations/{invitationId} {
        allow read: if isAuthenticated();
        allow create, update, delete: if belongsToTenant(tenantId) && isAdmin();
      }
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}